name: Deploy to EC2
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # ───────────────────────────── 소스 & JAR ─────────────────────────────
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v3          # JDK 17
      with:
        distribution: temurin
        java-version: 17

    - run: chmod +x ./gradlew
    - run: ./gradlew clean bootJar          # build/libs/*.jar 생성

    # ───────────────────────────── SSH 키 (**그냥 PEM 원문** 시크릿) ──────
    #  *GitHub Secrets → EC2_SSH_KEY 에 “-----BEGIN RSA PRIVATE KEY … END RSA PRIVATE KEY-----” 그대로 넣는다*  
    - name: Load EC2 key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # ───────────────────────────── JAR 전송 ───────────────────────────────
    - name: Copy JAR to EC2
      run: |
        scp -o StrictHostKeyChecking=no \
            build/libs/*.jar  ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app.jar

    # ───────────────────────────── 원격 실행 ──────────────────────────────
    - name: Restart App on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<'EOS'
          pkill -f 'java -jar' || true

          export DB_ID="${DB_ID}"
          export DB_PW="${DB_PW}"
          export JWT_SECRETKEY="${JWT_SECRETKEY}"

          nohup java -jar /home/ubuntu/app.jar \
                --spring.profiles.active=dev \
                > app.log 2>&1 &
        EOS
      env:           # 시크릿을 원격 셸로 전달
        DB_ID:         ${{ secrets.DB_ID }}
        DB_PW:         ${{ secrets.DB_PW }}
        JWT_SECRETKEY: ${{ secrets.JWT_SECRETKEY }}
