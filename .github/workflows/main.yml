name: Deploy to EC2
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - run: chmod +x ./gradlew
    - run: ./gradlew clean bootJar            # build/libs/*.jar 생성

    # ─── SSH 키 (PEM 원문 그대로) ───
    - name: Write EC2 key
      run: |
        printf "%s" "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ec2_key.pem
        chmod 600 ec2_key.pem

    - name: Add key to agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ec2_key.pem
        ssh-add -l
      # 키 로드 실패 시 바로 중단
      continue-on-error: false

    # ─── JAR 전송 ───
    - name: Copy JAR to EC2
      run: |
        scp -C -o StrictHostKeyChecking=no -i ec2_key.pem \
            build/libs/*.jar \
            ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app.jar

    # ─── 원격 재시작 ───
    - name: Restart app
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no \
            ubuntu@${{ secrets.EC2_HOST }} <<'EOS'
          pkill -f 'java -jar' || true
          export DB_ID="${DB_ID}"
          export DB_PW="${DB_PW}"
          export JWT_SECRETKEY="${JWT_SECRETKEY}"
          nohup java -jar /home/ubuntu/app.jar --spring.profiles.active=dev > app.log 2>&1 &
        EOS
      env:
        DB_ID:         ${{ secrets.DB_ID }}
        DB_PW:         ${{ secrets.DB_PW }}
        JWT_SECRETKEY: ${{ secrets.JWT_SECRETKEY }}
